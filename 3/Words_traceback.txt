#include <iostream>
#include <stdbool.h>
#include <stdlib.h>
#include <time.h>
using namespace std;
int w[200];
int v[200];
int n;
int cache[200];
int key[200];
int k=0;
void traceback(int L)
{
    int i,j,sol=0;
    if (L<0)
        return;
    for(j=1;j<=n;j++)
    {
        if ((L-w[j])>=0)
        {
            if((v[j]+cache[L-w[j]])>=sol)
            {
                sol = v[j]+cache[L-w[j]];
                key[k] = w[j];
            }
        }
    }
    k++;
    return traceback(L-key[k-1]);
}
int maxR(int l)
{
    int cache[l+1];
    int i,j,sol;
    cache[0]=0;
    for (i=1;i<=l;i++)
    {
        sol = 0;
        for (j=1;j<=n;j++)
        {
            if(i-w[j]>=0)
            {
                sol=max(v[j]+cache[i-w[j]], sol);
            }
        }
        cache[i]=sol;
    }
    return cache[l];
}
int main()
{
    int l,i;
    cout<<"Enter the length of the tree"<<endl;
    cin>>l;
    cout<<"Enter the number of cuts"<<endl;
    cin>>n;
    cout<<"Enter the length of cuts"<<endl;
    for(i=1;i<=n;i++)
    {
        cin>>w[i];
    }
    cout<<"Enter the value of the cuts"<<endl;
    for(i=1;i<=n;i++)
    {
        cin>>v[i];
    }
    int maxval = maxR(l);
    traceback(l);
    cout<<"The maximum value from the given cuts possible = "<<maxval<<endl;
    cout<<"The length of the cuts used: "<<endl;
    for(i=0;i<k;i++)
    {
        cout<<key[i]<<" ";
    }
    return 0;
}
